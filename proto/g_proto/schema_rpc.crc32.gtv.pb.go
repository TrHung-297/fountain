// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema_rpc.crc32.gtv.proto

package g_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GTVConstructor int32

const (
	GTVConstructor_CRC32_UNKNOWN                        GTVConstructor = 0
	GTVConstructor_CRC32_Penalty_Ticket_Execute         GTVConstructor = 1
	GTVConstructor_CRC32_ranking_penalty_ticket_execute GTVConstructor = -873187034
)

var GTVConstructor_name = map[int32]string{
	0:          "CRC32_UNKNOWN",
	1:          "CRC32_Penalty_Ticket_Execute",
	-873187034: "CRC32_ranking_penalty_ticket_execute",
}

var GTVConstructor_value = map[string]int32{
	"CRC32_UNKNOWN":                        0,
	"CRC32_Penalty_Ticket_Execute":         1,
	"CRC32_ranking_penalty_ticket_execute": -873187034,
}

func (x GTVConstructor) String() string {
	return proto.EnumName(GTVConstructor_name, int32(x))
}

func (GTVConstructor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_89247b1fd71cc438, []int{0}
}

func init() {
	proto.RegisterEnum("g_proto.GTVConstructor", GTVConstructor_name, GTVConstructor_value)
}

func init() { proto.RegisterFile("schema_rpc.crc32.gtv.proto", fileDescriptor_89247b1fd71cc438) }

var fileDescriptor_89247b1fd71cc438 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x4e, 0xce, 0x48,
	0xcd, 0x4d, 0x8c, 0x2f, 0x2a, 0x48, 0xd6, 0x4b, 0x2e, 0x4a, 0x36, 0x36, 0xd2, 0x4b, 0x2f, 0x29,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4f, 0x8f, 0x07, 0x33, 0xb4, 0x2a, 0xb8, 0xf8,
	0xdc, 0x43, 0xc2, 0x9c, 0xf3, 0xf3, 0x8a, 0x4b, 0x8a, 0x4a, 0x93, 0x4b, 0xf2, 0x8b, 0x84, 0x04,
	0xb9, 0x78, 0x9d, 0x83, 0x9c, 0x8d, 0x8d, 0xe2, 0x43, 0xfd, 0xbc, 0xfd, 0xfc, 0xc3, 0xfd, 0x04,
	0x18, 0x84, 0x14, 0xb8, 0x64, 0x20, 0x42, 0x01, 0xa9, 0x79, 0x89, 0x39, 0x25, 0x95, 0xf1, 0x21,
	0x99, 0xc9, 0xd9, 0xa9, 0x25, 0xf1, 0xae, 0x15, 0xa9, 0xc9, 0xa5, 0x25, 0xa9, 0x02, 0x8c, 0x42,
	0x86, 0x5c, 0x2a, 0x10, 0x15, 0x45, 0x89, 0x79, 0xd9, 0x99, 0x79, 0xe9, 0xf1, 0x05, 0x50, 0x95,
	0x25, 0x10, 0x95, 0xa9, 0x50, 0x95, 0xcb, 0x3e, 0x5d, 0xb8, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff,
	0x19, 0x9d, 0xa4, 0xb9, 0xf8, 0xca, 0xf2, 0xc0, 0x4e, 0x82, 0xba, 0xc5, 0x89, 0xdd, 0x3d, 0x3e,
	0x00, 0xc4, 0xf0, 0x60, 0x4a, 0x62, 0x03, 0x8b, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xbf,
	0xb4, 0x31, 0xd8, 0xc4, 0x00, 0x00, 0x00,
}
