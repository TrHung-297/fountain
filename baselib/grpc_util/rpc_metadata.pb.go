// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_metadata.proto

package grpc_util

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import anypb "google.golang.org/protobuf/types/known/anypb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcMetadata struct {
	HostName        string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	PodName         string `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ServerId        int32  `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	NetLibSessionId int64  `protobuf:"varint,4,opt,name=net_lib_session_id,json=netLibSessionId,proto3" json:"net_lib_session_id,omitempty"`
	ClientAddr      string `protobuf:"bytes,5,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	AuthId          int64  `protobuf:"varint,6,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	SessionId       int64  `protobuf:"varint,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	TraceId         int64  `protobuf:"varint,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId          int64  `protobuf:"varint,9,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	ReceiveTime     int64  `protobuf:"varint,10,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	From            string `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	To              string `protobuf:"bytes,12,opt,name=to,proto3" json:"to,omitempty"`
	// UserID
	UserId      int32 `protobuf:"varint,13,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientMsgId int64 `protobuf:"varint,14,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	// gtv version
	Version int32 `protobuf:"varint,15,opt,name=version,proto3" json:"version,omitempty"`
	// term
	TermState        int32  `protobuf:"varint,16,opt,name=term_state,json=termState,proto3" json:"term_state,omitempty"`
	PunishStartTime  int32  `protobuf:"varint,17,opt,name=punish_start_time,json=punishStartTime,proto3" json:"punish_start_time,omitempty"`
	PunishExpireTime int32  `protobuf:"varint,18,opt,name=punish_expire_time,json=punishExpireTime,proto3" json:"punish_expire_time,omitempty"`
	PunishReason     string `protobuf:"bytes,19,opt,name=punish_reason,json=punishReason,proto3" json:"punish_reason,omitempty"`
	// Device Info
	DeviceModel   string `protobuf:"bytes,20,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	Platform      string `protobuf:"bytes,21,opt,name=platform,proto3" json:"platform,omitempty"`
	SystemVersion string `protobuf:"bytes,22,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	ApiId         int32  `protobuf:"varint,23,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	AppName       string `protobuf:"bytes,24,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppVersion    string `protobuf:"bytes,25,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	Country       string `protobuf:"bytes,26,opt,name=country,proto3" json:"country,omitempty"`
	Region        string `protobuf:"bytes,27,opt,name=region,proto3" json:"region,omitempty"`
	// extend
	Extend               *anypb.Any `protobuf:"bytes,28,opt,name=extend,proto3" json:"extend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RpcMetadata) Reset()         { *m = RpcMetadata{} }
func (m *RpcMetadata) String() string { return proto.CompactTextString(m) }
func (*RpcMetadata) ProtoMessage()    {}
func (*RpcMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_metadata_d03bec99b7a16085, []int{0}
}
func (m *RpcMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcMetadata.Unmarshal(m, b)
}
func (m *RpcMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcMetadata.Marshal(b, m, deterministic)
}
func (dst *RpcMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcMetadata.Merge(dst, src)
}
func (m *RpcMetadata) XXX_Size() int {
	return xxx_messageInfo_RpcMetadata.Size(m)
}
func (m *RpcMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RpcMetadata proto.InternalMessageInfo

func (m *RpcMetadata) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *RpcMetadata) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *RpcMetadata) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *RpcMetadata) GetNetLibSessionId() int64 {
	if m != nil {
		return m.NetLibSessionId
	}
	return 0
}

func (m *RpcMetadata) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

func (m *RpcMetadata) GetAuthId() int64 {
	if m != nil {
		return m.AuthId
	}
	return 0
}

func (m *RpcMetadata) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RpcMetadata) GetTraceId() int64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *RpcMetadata) GetSpanId() int64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *RpcMetadata) GetReceiveTime() int64 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

func (m *RpcMetadata) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RpcMetadata) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *RpcMetadata) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RpcMetadata) GetClientMsgId() int64 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func (m *RpcMetadata) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RpcMetadata) GetTermState() int32 {
	if m != nil {
		return m.TermState
	}
	return 0
}

func (m *RpcMetadata) GetPunishStartTime() int32 {
	if m != nil {
		return m.PunishStartTime
	}
	return 0
}

func (m *RpcMetadata) GetPunishExpireTime() int32 {
	if m != nil {
		return m.PunishExpireTime
	}
	return 0
}

func (m *RpcMetadata) GetPunishReason() string {
	if m != nil {
		return m.PunishReason
	}
	return ""
}

func (m *RpcMetadata) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *RpcMetadata) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *RpcMetadata) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *RpcMetadata) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *RpcMetadata) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *RpcMetadata) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *RpcMetadata) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *RpcMetadata) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *RpcMetadata) GetExtend() *anypb.Any {
	if m != nil {
		return m.Extend
	}
	return nil
}

func init() {
	proto.RegisterType((*RpcMetadata)(nil), "grpc_util.RpcMetadata")
}

func init() { proto.RegisterFile("rpc_metadata.proto", fileDescriptor_rpc_metadata_d03bec99b7a16085) }

var fileDescriptor_rpc_metadata_d03bec99b7a16085 = []byte{
	// 588 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x93, 0x6f, 0x6f, 0xd3, 0x30,
	0x10, 0xc6, 0xd5, 0x6e, 0x4b, 0x9b, 0xcb, 0xba, 0x3f, 0x66, 0x7f, 0xdc, 0x0d, 0xb4, 0x32, 0x04,
	0xaa, 0x60, 0xea, 0x24, 0xf8, 0x04, 0x9b, 0x40, 0x22, 0x12, 0x43, 0x53, 0x87, 0x78, 0xc1, 0x9b,
	0xc8, 0x8d, 0x6f, 0x99, 0xa5, 0x26, 0xb6, 0x6c, 0xb7, 0x5a, 0xf9, 0xd6, 0x7c, 0x03, 0xe4, 0x73,
	0x82, 0x78, 0xd5, 0xde, 0xf3, 0x7b, 0xfc, 0x24, 0x77, 0x39, 0x03, 0xb3, 0xa6, 0x2c, 0x6a, 0xf4,
	0x42, 0x0a, 0x2f, 0x66, 0xc6, 0x6a, 0xaf, 0x59, 0x5a, 0x05, 0x71, 0xe5, 0xd5, 0xf2, 0x6c, 0x5c,
	0x69, 0x5d, 0x2d, 0xf1, 0x9a, 0xc0, 0x62, 0xf5, 0x78, 0x2d, 0x9a, 0x4d, 0x74, 0x5d, 0xfe, 0x49,
	0x20, 0x9b, 0x9b, 0xf2, 0xae, 0x3d, 0xcb, 0xce, 0x21, 0x7d, 0xd2, 0xce, 0x17, 0x8d, 0xa8, 0x91,
	0xf7, 0x26, 0xbd, 0x69, 0x3a, 0x1f, 0x06, 0xe1, 0xbb, 0xa8, 0x91, 0x8d, 0x61, 0x68, 0xb4, 0x8c,
	0xac, 0x4f, 0x6c, 0x60, 0xb4, 0x24, 0x74, 0x0e, 0xa9, 0x43, 0xbb, 0x46, 0x5b, 0x28, 0xc9, 0xb7,
	0x26, 0xbd, 0xe9, 0xce, 0x7c, 0x18, 0x85, 0x5c, 0xb2, 0x0f, 0xc0, 0x1a, 0xf4, 0xc5, 0x52, 0x2d,
	0x0a, 0x87, 0xce, 0x29, 0xdd, 0x04, 0xd7, 0xf6, 0xa4, 0x37, 0xdd, 0x9a, 0xef, 0x37, 0xe8, 0xbf,
	0xa9, 0xc5, 0x43, 0xd4, 0x73, 0xc9, 0x2e, 0x20, 0x2b, 0x97, 0x0a, 0x1b, 0x5f, 0x08, 0x29, 0x2d,
	0xdf, 0xa1, 0xe7, 0x40, 0x94, 0x6e, 0xa4, 0xb4, 0xec, 0x14, 0x06, 0x62, 0xe5, 0x9f, 0x42, 0x44,
	0x42, 0x11, 0x49, 0x28, 0x73, 0xc9, 0x5e, 0x01, 0xfc, 0x17, 0x3f, 0x20, 0x96, 0xba, 0x7f, 0xc1,
	0x63, 0x18, 0x7a, 0x2b, 0x4a, 0x0c, 0x70, 0x48, 0x70, 0x40, 0x75, 0x2e, 0x43, 0xa4, 0x33, 0x82,
	0x8e, 0xa5, 0x31, 0x32, 0x94, 0xb9, 0x64, 0xaf, 0x61, 0xd7, 0x62, 0x89, 0x6a, 0x8d, 0x85, 0x57,
	0x35, 0x72, 0x20, 0x9a, 0xb5, 0xda, 0x0f, 0x55, 0x23, 0x63, 0xb0, 0xfd, 0x68, 0x75, 0xcd, 0x33,
	0x7a, 0x51, 0xfa, 0xcf, 0xf6, 0xa0, 0xef, 0x35, 0xdf, 0x25, 0xa5, 0xef, 0x75, 0xc8, 0x5f, 0xb9,
	0x38, 0x9b, 0x11, 0xcd, 0x26, 0x09, 0x65, 0x2e, 0xd9, 0x25, 0x8c, 0xda, 0x66, 0x6b, 0x57, 0x05,
	0xbc, 0x17, 0x1f, 0x10, 0xc5, 0x3b, 0x57, 0xe5, 0x92, 0x71, 0x18, 0xac, 0xd1, 0x86, 0x26, 0xf8,
	0x3e, 0x1d, 0xee, 0xca, 0xd0, 0xb0, 0x47, 0x5b, 0x17, 0xce, 0x0b, 0x8f, 0xfc, 0x80, 0x60, 0x1a,
	0x94, 0x87, 0x20, 0xb0, 0xf7, 0x70, 0x68, 0x56, 0x8d, 0x72, 0x4f, 0xc1, 0x60, 0x7d, 0xec, 0xe0,
	0x90, 0x5c, 0xfb, 0x11, 0x3c, 0x04, 0x9d, 0xba, 0xb8, 0x02, 0xd6, 0x7a, 0xf1, 0xd9, 0x28, 0xdb,
	0xb6, 0xcb, 0xc8, 0x7c, 0x10, 0xc9, 0x17, 0x02, 0xe4, 0x7e, 0x03, 0xa3, 0xd6, 0x6d, 0x51, 0x38,
	0xdd, 0xf0, 0x17, 0xd4, 0xea, 0x6e, 0x14, 0xe7, 0xa4, 0x85, 0xd9, 0x49, 0x5c, 0xab, 0x12, 0x8b,
	0x5a, 0x4b, 0x5c, 0xf2, 0x23, 0xf2, 0x64, 0x51, 0xbb, 0x0b, 0x12, 0x3b, 0x83, 0xa1, 0x59, 0x0a,
	0xff, 0xa8, 0x6d, 0xcd, 0x8f, 0xe3, 0xb2, 0x75, 0x35, 0x7b, 0x0b, 0x7b, 0x6e, 0xe3, 0x3c, 0xd6,
	0x45, 0xd7, 0xfd, 0x09, 0x39, 0x46, 0x51, 0xfd, 0xd9, 0xce, 0xe0, 0x18, 0x12, 0x61, 0x54, 0x18,
	0xdd, 0x29, 0xbd, 0xec, 0x8e, 0x30, 0x2a, 0x7e, 0x6c, 0x61, 0x4c, 0x5c, 0x55, 0x1e, 0x57, 0x55,
	0x18, 0x43, 0xab, 0x7a, 0x01, 0x59, 0x40, 0x5d, 0xea, 0x38, 0x2e, 0x98, 0x30, 0xa6, 0x8b, 0xe4,
	0x30, 0x28, 0xf5, 0xaa, 0xf1, 0x76, 0xc3, 0xcf, 0xe2, 0xd1, 0xb6, 0x64, 0x27, 0x90, 0x58, 0xac,
	0xc2, 0xa9, 0x73, 0x02, 0x6d, 0xc5, 0xae, 0x20, 0xc1, 0x67, 0x8f, 0x8d, 0xe4, 0x2f, 0x27, 0xbd,
	0x69, 0xf6, 0xf1, 0x68, 0x16, 0x6f, 0xdc, 0xac, 0xbb, 0x71, 0xb3, 0x9b, 0x66, 0x33, 0x6f, 0x3d,
	0xb7, 0xef, 0x60, 0xb4, 0x6e, 0x66, 0x95, 0x5f, 0xcf, 0x7e, 0x13, 0xbf, 0x3d, 0xfc, 0x75, 0x1f,
	0x7e, 0xdb, 0x7b, 0xf8, 0x59, 0x78, 0xf1, 0xb5, 0x7f, 0xdf, 0x5b, 0x24, 0x44, 0x3f, 0xfd, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x37, 0xdf, 0xa1, 0xec, 0xde, 0x03, 0x00, 0x00,
}
